==================================================
How to remove annoying popups:
  A new security feature in Mojave pops up a system dialog 
  saying that your app wants access to control something
  (usually a Finder.app).
  To remove these popups, go to 
    System Preferences > Security & Privacy, 
  unlock
  add all apps to "Accessibility" and "Full Disk Access"
  lock again

==================================================
How to make apps from code:
  Below find the code of several apps.
  Go to Applications/Utilities
  Double-click on Script Editor.app
  Copy/paste the script into it
  Click on |> button to compile it
  Save it as .app

==================================================
Adding icons:
  find icon online, open the image file and copy the image
  right click on script .app file - select "Get info"
  Click on the icon on the top-left of the info window to select it
  press <command>-V to paste image
  close the info window

==================================================
Drag the app file to the panel of a finder window:
   <option><command>-drag the app file

==================================================
Applescript "RefreshWindow"
==================================================

tell application "Finder" to tell front window to update every item
 
 
==================================================
Applescript "NewTextFile"
==================================================

try
tell application "Finder" to set the currentFolder to (folder of the front window as alias)
on error
set thecurrentFolder to path to desktop folder as alias
end try

set nowSeconds to ((current date) - (date ("1/1/1970")) - (time to GMT)) as miles as string
set currentFile to POSIX path of currentFolder & "AAAAA_" & nowSeconds & ".txt"

do shell script "touch \"" & currentFile & "\""


==================================================
Applescript "NewTerminal"
==================================================

on run
tell application "Finder"
try
activate
set frontWin to folder offront window as string
set frontWinPath to (get POSIX pathof frontWin)
tell application "Terminal"
activate
do scriptwith command "cd \"" & frontWinPath & "\""
end tell
onerror error_message
beep
display dialogerror_messagebuttons ยฌ
{"OK"} default button 1
end try
end tell
end run

==================================================
Applescript "New_iTerminal"
from http://peterdowns.com/posts/open-iterm-finder-service.html
==================================================

(* 
    Open Terminal Here 
    A toolbar script for Mac OS X 10.3/10.4
    Written by Brian Schlining
   http://hohonuuli.blogspot.de/2016/02/iterm2-version-3-open-iterm-here-script.html  
 *)


property debug : false

-- when the toolbar script icon is clicked 
-- 
on run
	tell application "Finder"
		try
			set this_folder to (the target of the front window) as alias
		on error
			set this_folder to startup disk
		end try
		
		my process_item(this_folder)
		
	end tell
end run


-- This handler processes folders dropped onto the toolbar script icon 
-- 
on open these_items
	repeat with i from 1 to the count of these_items
		set this_item to item i of these_items
		my process_item(this_item)
	end repeat
end open


-- this subroutine processes does the actual work 
-- this version can handle this weirdo case: a folder named "te'st"รถ te%s`t"

on process_item(this_item)
	
	set thePath to quoted form of POSIX path of this_item
	set theCmd to "cd " & thePath & ";clear;"
	
	tell application "iTerm"
		activate
		-- just open a terminal and cd to thePath
		--set newWindow to (create window with default profile)
		
		set aWindow to current window
		
		if aWindow is equal to missing value then
			set aWindow to (create window with default profile)
		else
			tell aWindow
				set t to (create tab with default profile)
			end tell
		end if
		
		
		tell current session of aWindow
			write text "cd " & thePath & ";clear;"
		end tell
		
	end tell
	
	
end process_item
